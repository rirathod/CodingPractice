/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode result = new ListNode(0);
        ListNode returnValue = result;
        int carry = 0;
        int sum = 0;
        
        while(l1 != null && l2 != null) {
            sum = l1.val + l2.val + carry;
            
            if (sum > 9) {
                carry = sum/10;
                sum = sum%10;
            } else {
                carry = 0;
            }
            
            System.out.print("sum: " + sum);
            System.out.print("; carry: " + carry);
            System.out.println();
            
            result.next = new ListNode(sum);
            result = result.next;
            
            l1 = l1.next;
            l2 = l2.next;
        }
        
        while (l1 != null) {
            sum = l1.val + carry;
            
            if (sum > 9) {
                carry = sum/10;
                sum = sum%10;
            } else {
                carry = 0;
            }
            
            System.out.print("When l1!=null block");
            System.out.print("sum: " + sum);
            System.out.print("; carry: " + carry);
            System.out.println();
            
            result.next = new ListNode(sum);
            result = result.next;
            
            l1 = l1.next;
        }
        
        while (l2 != null) {
            sum = l2.val + carry;
            
            if (sum > 9) {
                carry = sum/10;
                sum = sum%10;
            } else {
                carry = 0;
            }
            
            System.out.print("When l2!=null block");
            System.out.print("sum: " + sum);
            System.out.print("; carry: " + carry);
            System.out.println();
            
            result.next = new ListNode(sum);
            result = result.next;
            
            l2 = l2.next;
        }
        
        if (carry > 0) {
            result.next = new ListNode(carry);
            result = result.next;
            
            System.out.print("When carry>0 block");
            System.out.print("carry: " + carry);
        }
        
        return returnValue.next;
    }
}
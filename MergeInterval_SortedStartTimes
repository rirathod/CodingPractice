class Solution {
    private class IntervalComparator implements Comparator<int[]> {
        @Override
        public int compare(int[] a, int[] b) {
            return a[0] < b[0] ? -1 : a[0] == b[0] ? 0 : 1;
        }
    }
    
    public int[][] merge(int[][] intervals) {
        Collections.sort(Arrays.asList(intervals), new IntervalComparator ());
        
        LinkedList<int[]> merged = new LinkedList<int[]>();
        for (int i=0; i<intervals.length; i++) {
            if (merged.isEmpty() || merged.getLast()[1] < intervals[i][0]) {
                merged.add(intervals[i]);
            } else {
                merged.getLast()[1] = Math.max(merged.getLast()[1], intervals[i][1]);
            }
        }
        
        return merged.toArray(new int[merged.size()][]);
    }
}





















































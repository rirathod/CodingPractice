/**
Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.
Note: For the purpose of this problem, we define empty string as valid palindrome.

Example 1:
Input: "A man, a plan, a canal: Panama"
Output: true

Example 2:
Input: "race a car"
Output: false

Constraints:
s consists only of printable ASCII characters.
**/

class Solution {
    public boolean isPalindrome(String s) {
        if (s == null || s.length() == 0) {
            return true;
        }
        
        StringBuilder builder = new StringBuilder();
        for (char c: s.toCharArray()) {
            if ((c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || (c >= '0' && c <= '9')) {
                builder.append(c);
            }
        }
        
        s = builder.toString();
        
        int i = 0;
        int j = s.length()-1;
        while(i<s.length() && j>=0 && i<j) {           
            char startChar = Character.toLowerCase(s.charAt(i));
            char endChar = Character.toLowerCase(s.charAt(j));
            if (startChar != endChar) {
                return false;
            }
            
            i++;
            j--;
        }
        
        return true;
    }
}

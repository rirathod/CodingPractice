class Solution {
    public int numIslands(char[][] grid) {
        if (grid == null || grid.length == 0) return 0;
        
        int count=0;
        for (int i=0; i<grid.length; i++) {
            for(int j=0; j<grid[0].length; j++) {
                
                if (grid[i][j] == '1') {
                    count++;
                    searchForIsland(grid, i, j);
                }  
            }
        }
        
        return count;
    }
    
    public void searchForIsland(char[][] grid, int currentRow, int currentColumn) {
        if (currentRow < 0 
            || currentRow >= grid.length 
            || currentColumn < 0 
            || currentColumn >= grid[0].length) {
            return;
        }
        
        if (grid[currentRow][currentColumn] == '0') {
            return;
        }
        
        grid[currentRow][currentColumn] = '0';
        
        searchForIsland(grid, currentRow-1, currentColumn);
        searchForIsland(grid, currentRow+1, currentColumn);
        searchForIsland(grid, currentRow, currentColumn-1);
        searchForIsland(grid, currentRow, currentColumn+1);
    }
}